{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\College\\\\Final Year Proj\\\\Project File\\\\bookmyservice\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { auth, db } from \"../firebase\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport AccountSettings from \"../components/AccountSettings\"; // Import the AccountSettings component\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const userRole = queryParams.get(\"role\"); // Get role from URL query params\n  const [activeTab, setActiveTab] = useState(\"Overview\");\n  const [projects, setProjects] = useState([]); // For Projects tab\n  const [messages, setMessages] = useState([]); // For Inbox tab\n  const [connections, setConnections] = useState([]); // For Connections tab\n  const [loading, setLoading] = useState(false); // Loading state\n  const navigate = useNavigate();\n\n  // Fetch data based on the active tab\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        if (activeTab === \"Projects\") {\n          // Fetch projects\n          const projectsQuery = query(collection(db, \"projects\"), where(userRole === \"client\" ? \"clientId\" : \"freelancerId\", \"==\", auth.currentUser.uid));\n          const projectsSnapshot = await getDocs(projectsQuery);\n          const projectsData = projectsSnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n          setProjects(projectsData);\n        } else if (activeTab === \"Inbox\") {\n          // Fetch messages\n          const messagesQuery = query(collection(db, \"messages\"), where(\"receiverId\", \"==\", auth.currentUser.uid));\n          const messagesSnapshot = await getDocs(messagesQuery);\n          const messagesData = messagesSnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n          setMessages(messagesData);\n        } else if (activeTab === \"Connections\") {\n          // Fetch connections\n          const connectionsQuery = query(collection(db, \"connections\"), where(userRole === \"client\" ? \"clientId\" : \"freelancerId\", \"==\", auth.currentUser.uid));\n          const connectionsSnapshot = await getDocs(connectionsQuery);\n          const connectionsData = connectionsSnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          }));\n          setConnections(connectionsData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [activeTab, userRole]);\n  const renderContent = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    }\n    switch (activeTab) {\n      case \"Overview\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Welcome to your \", userRole === \"client\" ? \"Client\" : \"Freelancer\", \" Dashboard!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Here you can manage your projects, payments, and profile.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this);\n      case \"Projects\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: userRole === \"client\" ? \"My Projects\" : \"Projects Worked On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), projects.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: project.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)]\n            }, project.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No projects found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this);\n      case \"Inbox\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: message.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)]\n            }, message.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No messages found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this);\n      case \"Connections\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: userRole === \"client\" ? \"Freelancers\" : \"Clients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), connections.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: connections.map(connection => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: connection.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: connection.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)]\n            }, connection.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No connections found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this);\n      case \"AccountSettings\":\n        return /*#__PURE__*/_jsxDEV(AccountSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }, this);\n      // Render the AccountSettings component\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Welcome!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a section from the sidebar to view its content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  const handleLogout = () => {\n    auth.signOut();\n    navigate(\"/\"); // Redirect to the sign-in page after logout\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeTab === \"Overview\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"Overview\"),\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeTab === \"Projects\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"Projects\"),\n          children: userRole === \"client\" ? \"My Projects\" : \"Projects Worked On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeTab === \"Inbox\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"Inbox\"),\n          children: \"Inbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeTab === \"Connections\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"Connections\"),\n          children: userRole === \"client\" ? \"Freelancers\" : \"Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: activeTab === \"AccountSettings\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"AccountSettings\"),\n          children: \"Account Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-logout\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: activeTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"zB/z3TMolHgCtqOs+H+w0J13vmk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","auth","db","collection","query","where","getDocs","AccountSettings","jsxDEV","_jsxDEV","Dashboard","_s","location","queryParams","URLSearchParams","search","userRole","get","activeTab","setActiveTab","projects","setProjects","messages","setMessages","connections","setConnections","loading","setLoading","navigate","fetchData","projectsQuery","currentUser","uid","projectsSnapshot","projectsData","docs","map","doc","id","data","messagesQuery","messagesSnapshot","messagesData","connectionsQuery","connectionsSnapshot","connectionsData","error","console","renderContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","project","title","description","message","senderName","content","connection","name","email","handleLogout","signOut","className","onClick","_c","$RefreshReg$"],"sources":["D:/Data/College/Final Year Proj/Project File/bookmyservice/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport AccountSettings from \"../components/AccountSettings\"; // Import the AccountSettings component\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const userRole = queryParams.get(\"role\"); // Get role from URL query params\r\n  const [activeTab, setActiveTab] = useState(\"Overview\");\r\n  const [projects, setProjects] = useState([]); // For Projects tab\r\n  const [messages, setMessages] = useState([]); // For Inbox tab\r\n  const [connections, setConnections] = useState([]); // For Connections tab\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch data based on the active tab\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (activeTab === \"Projects\") {\r\n          // Fetch projects\r\n          const projectsQuery = query(\r\n            collection(db, \"projects\"),\r\n            where(userRole === \"client\" ? \"clientId\" : \"freelancerId\", \"==\", auth.currentUser.uid)\r\n          );\r\n          const projectsSnapshot = await getDocs(projectsQuery);\r\n          const projectsData = projectsSnapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          setProjects(projectsData);\r\n        } else if (activeTab === \"Inbox\") {\r\n          // Fetch messages\r\n          const messagesQuery = query(\r\n            collection(db, \"messages\"),\r\n            where(\"receiverId\", \"==\", auth.currentUser.uid)\r\n          );\r\n          const messagesSnapshot = await getDocs(messagesQuery);\r\n          const messagesData = messagesSnapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          setMessages(messagesData);\r\n        } else if (activeTab === \"Connections\") {\r\n          // Fetch connections\r\n          const connectionsQuery = query(\r\n            collection(db, \"connections\"),\r\n            where(userRole === \"client\" ? \"clientId\" : \"freelancerId\", \"==\", auth.currentUser.uid)\r\n          );\r\n          const connectionsSnapshot = await getDocs(connectionsQuery);\r\n          const connectionsData = connectionsSnapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          setConnections(connectionsData);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [activeTab, userRole]);\r\n\r\n  const renderContent = () => {\r\n    if (loading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    switch (activeTab) {\r\n      case \"Overview\":\r\n        return (\r\n          <div>\r\n            <h3>Welcome to your {userRole === \"client\" ? \"Client\" : \"Freelancer\"} Dashboard!</h3>\r\n            <p>Here you can manage your projects, payments, and profile.</p>\r\n          </div>\r\n        );\r\n      case \"Projects\":\r\n        return (\r\n          <div>\r\n            <h3>{userRole === \"client\" ? \"My Projects\" : \"Projects Worked On\"}</h3>\r\n            {projects.length > 0 ? (\r\n              <ul>\r\n                {projects.map((project) => (\r\n                  <li key={project.id}>\r\n                    <h4>{project.title}</h4>\r\n                    <p>{project.description}</p>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No projects found.</p>\r\n            )}\r\n          </div>\r\n        );\r\n      case \"Inbox\":\r\n        return (\r\n          <div>\r\n            <h3>Inbox</h3>\r\n            {messages.length > 0 ? (\r\n              <ul>\r\n                {messages.map((message) => (\r\n                  <li key={message.id}>\r\n                    <h4>{message.senderName}</h4>\r\n                    <p>{message.content}</p>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No messages found.</p>\r\n            )}\r\n          </div>\r\n        );\r\n      case \"Connections\":\r\n        return (\r\n          <div>\r\n            <h3>{userRole === \"client\" ? \"Freelancers\" : \"Clients\"}</h3>\r\n            {connections.length > 0 ? (\r\n              <ul>\r\n                {connections.map((connection) => (\r\n                  <li key={connection.id}>\r\n                    <h4>{connection.name}</h4>\r\n                    <p>{connection.email}</p>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No connections found.</p>\r\n            )}\r\n          </div>\r\n        );\r\n      case \"AccountSettings\":\r\n        return <AccountSettings />; // Render the AccountSettings component\r\n      default:\r\n        return (\r\n          <div>\r\n            <h3>Welcome!</h3>\r\n            <p>Select a section from the sidebar to view its content.</p>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    auth.signOut();\r\n    navigate(\"/\"); // Redirect to the sign-in page after logout\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Sidebar */}\r\n      <div className=\"sidebar\">\r\n        <h3>Dashboard</h3>\r\n        <ul>\r\n          <li\r\n            className={activeTab === \"Overview\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"Overview\")}\r\n          >\r\n            Overview\r\n          </li>\r\n          <li\r\n            className={activeTab === \"Projects\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"Projects\")}\r\n          >\r\n            {userRole === \"client\" ? \"My Projects\" : \"Projects Worked On\"}\r\n          </li>\r\n          <li\r\n            className={activeTab === \"Inbox\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"Inbox\")}\r\n          >\r\n            Inbox\r\n          </li>\r\n          <li\r\n            className={activeTab === \"Connections\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"Connections\")}\r\n          >\r\n            {userRole === \"client\" ? \"Freelancers\" : \"Clients\"}\r\n          </li>\r\n          <li\r\n            className={activeTab === \"AccountSettings\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"AccountSettings\")}\r\n          >\r\n            Account Settings\r\n          </li>\r\n          <li>\r\n            <button className=\"btn-logout\" onClick={handleLogout}>\r\n              Logout\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"dashboard-content\">\r\n        <h2>{activeTab}</h2>\r\n        <div className=\"content-area\">{renderContent()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}